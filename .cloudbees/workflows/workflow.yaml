name: helm-uninstall-action
apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow

on:
  push:
    branches:
      - '**'
jobs:
  test:
    needs: build
    permissions:
      scm-token-own: read
      id-token: write
    steps:
    - name: Login to AWS
      uses: https://github.com/cloudbees-io/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: ${{ vars.oidc_staging_iam_role }}
        role-duration-seconds: "3600"
    - id: ecrconfig
      name: Configure container registry for staging ECR
      uses: cloudbees-io/configure-ecr-credentials@v1
    - uses: cloudbees-io/configure-eks-credentials@v1
      with:
        name: ${{ vars.staging_east_cluster_name }}
    - name: checkout
      uses: cloudbees-io/checkout@v1
    - id: createns
      name: Create Kubernetes Namespace
      uses: cloudbees-io/create-k8s-namespace@v1
      with:
        name: ${{ format('{0}{1}{2}', cloudbees.scm.branch, cloudbees.scm.repository, cloudbees.scm.sha) }}
        sanitize-name: "true"
        labels: |
          cloudbees.io/cleanup: "true"
    - name: install a helm chart
      uses: cloudbees-io/helm-install@v1
      with:
        release-name: nginx-example
        chart-location: oci://registry-1.docker.io/bitnamicharts/nginx
        version: 15.4.2
        namespace: ${{ steps.createns.outputs.name }}
        timeout: 1m
        values: |
          service:
            type: ClusterIP
    - name: uninstall a helm chart with dry-run
      uses: ./.cloudbees/testing
      with:
        release-name: nginx-example
        namespace: ${{ steps.createns.outputs.name }}
        timeout: 1m
        dry-run: "true"
    - name: uninstall a helm chart
      uses: ./.cloudbees/testing
      with:
        release-name: nginx-example
        namespace: ${{ steps.createns.outputs.name }}
        timeout: 1m
    - name: verify remote/OCI chart was removed
      uses: docker://alpine/k8s:1.27.3
      run: |
        set -ux
        EXPECTED='Error from server (NotFound): deployments.apps "nginx" not found'
        ACTUAL="$(kubectl get deployment nginx -n ${{ steps.createns.outputs.name }})"
        if [ "$ACTUAL" != "$EXPECTED" ]; then
          echo "Deployment still exists"
          exit 1
        fi
  build:
    if: cloudbees.api.url == 'https://api.saas-preprod.beescloud.com' || cloudbees.api.url == 'https://api.cloudbees.io'
    permissions:
      scm-token-own: read
      id-token: write
    steps:
    - name: get source code
      uses: cloudbees-io/checkout@v1
    - name: Validate action
      uses: docker://amazon/aws-cli:2.12.6
      run: |
        TESTING_SHA=$(cat .cloudbees/testing/action.yml | sha1sum)
        ORIGINAL_SHA=$(sed -e 's|docker://public.ecr.aws/l7o7z1g8/actions/|docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/|g' < action.yml | sha1sum)
        if [ "${TESTING_SHA}" != "${ORIGINAL_SHA}" ]; then
          echo "Original action different from testing action"
          exit 1
        fi
    - name: Login to AWS
      uses: https://github.com/cloudbees-io/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: ${{ vars.oidc_staging_iam_role }}
        role-duration-seconds: "3600"
    - id: ecrconfig
      name: Configure container registry for staging ECR
      uses: cloudbees-io/configure-ecr-credentials@v1
    - id: dockerhub
      name: Login to Dockerhub using Cloudbees service account
      uses: cloudbees-io/configure-oci-credentials@v1
      with:
        registry: docker.io
        username: ${{ secrets.e5bbc3_dockerhub_user }}
        password: ${{ secrets.e5bbc3_dockerhub_password }}
    - name: docker build and publish
      uses: cloudbees-io/kaniko@v1
      with:
        destination: 020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/helm-uninstall-action:${{ cloudbees.scm.sha }}
        context: ${{ cloudbees.workspace }}
        labels: maintaner=sdp-pod-3,email=engineering@cloudbees.io